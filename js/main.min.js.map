{"version":3,"file":"main.min.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC,C","sources":["webpack://gulp/../Portfolio/practic-vrnas/babel/main.js"],"sourcesContent":["const cardServices = document.querySelectorAll('.card-service');\r\nconst spollerChoose = document.querySelector('.spoller-choose');\r\nconst videos = document.querySelectorAll('.video');\r\nconst playerVideos = document.querySelectorAll('.player-video');\r\nconst clientTestimonials = document.querySelectorAll('.client-testimonial');\r\nconst navItems = document.querySelectorAll('.nav__item');\r\nconst popArticle = document.querySelector('.pop-article');\r\nconst itemTeams = document.querySelectorAll('.item-team');\r\nconst itemFaqs = document.querySelectorAll('.item-faq');\r\n\r\nconst header = document.querySelector('.header');\r\nconst testimonial = document.querySelector('.testimonial');\r\n\r\nnavItems.forEach((navItem, key) => {\r\n  if (navItem.classList.contains('_rel')) {\r\n    const btn = navItem.querySelector('.nav__item-btn');\r\n    const noLink = navItem.querySelector('a[href=\"javascript:0;\"]');\r\n    const subItems = navItem.querySelector('.nav__subitems');\r\n\r\n    const btnListener = (ev) => {\r\n      navItems.forEach((navItem1, key1) => {\r\n        if (key1 !== key) {\r\n          navItem1.classList.remove('_opened');\r\n          navItem1.style.marginBottom = '0';\r\n        }\r\n      });\r\n      navItem.classList.toggle('_opened');\r\n\r\n      const subItemsHeight = subItems.clientHeight;\r\n      if (navItem.classList.contains('_opened') && window.innerWidth <= 650) {\r\n        navItem.style.marginBottom = subItemsHeight+'px';\r\n      } else {\r\n        navItem.style.marginBottom = '0';\r\n      }\r\n    }\r\n  \r\n    btn.addEventListener('click', btnListener);\r\n    if (noLink) {\r\n      noLink.addEventListener('click', btnListener);\r\n    }\r\n  }\r\n});\r\n\r\nif (header) {\r\n  const menuBtn = header.querySelector('.header__menu-btn');\r\n\r\n  if (menuBtn) {\r\n    const nav = header.querySelector('.nav');\r\n\r\n    menuBtn.addEventListener('click', ev => {\r\n      menuBtn.classList.toggle('_opened');\r\n      nav.classList.toggle('_opened');\r\n      document.body.classList.toggle('no-scroll');\r\n    });\r\n  }\r\n\r\n  window.addEventListener('scroll', ev => {\r\n    if (window.scrollY >= 10) {\r\n      header.classList.add('_scrolled');\r\n    } else {\r\n      header.classList.remove('_scrolled');\r\n    }\r\n  });\r\n}\r\n\r\ncardServices.forEach(cardService => {\r\n  if (cardService) {\r\n    document.addEventListener('click', ev => {\r\n      const clck = ev.composedPath().includes(cardService);\r\n      if (clck) {\r\n        cardService.classList.add('_active');\r\n      } else {\r\n        cardService.classList.remove('_active');\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nif (spollerChoose) {\r\n  const items = spollerChoose.querySelectorAll('.spoller-choose__item');\r\n\r\n  items.forEach((item, key) => {\r\n    const title = item.querySelector('.spoller-choose__title');\r\n    const text = item.querySelector('.spoller-choose__text');\r\n    const marginBottom = text.clientHeight;\r\n\r\n    title.addEventListener('click', ev => {\r\n      items.forEach((item1, key1) => {\r\n        if (key !== key1) {\r\n          item1.classList.remove('_opened');\r\n          item1.style.marginBottom = '0';\r\n        }\r\n      });\r\n\r\n      item.classList.toggle('_opened');\r\n\r\n      if (item.classList.contains('_opened')) {\r\n        item.style.marginBottom = marginBottom+'px';\r\n      } else {\r\n        item.style.marginBottom = '0';\r\n      }\r\n    });\r\n  })\r\n}\r\n\r\nvideos.forEach(video => {\r\n  if (video) {\r\n    const popup = video.querySelector('.video__popup');\r\n    /** @type {HTMLVideoElement} */\r\n    const videoElem = popup.querySelector('.player-video__video');\r\n\r\n    video.addEventListener('click', ev => {\r\n      if (!popup.classList.contains('_visibled')) {\r\n        popup.classList.add('_visibled');\r\n        document.body.classList.add('no-scroll');\r\n        video.style.zIndex = 160;\r\n      } else {\r\n        const player = video.querySelector('.player-video');\r\n\r\n        if (!ev.composedPath().includes(player)) {\r\n          popup.classList.remove('_visibled');\r\n          document.body.classList.remove('no-scroll');\r\n          video.style.zIndex = 5;\r\n          videoElem.currentTime = videoElem.duration;\r\n        }\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nplayerVideos.forEach(playerVideo => {\r\n  /** @type {HTMLVideoElement} */\r\n  const video = playerVideo.querySelector('.player-video__video');\r\n  const preview = playerVideo.querySelector('.player-video__preview');\r\n  const overlay = playerVideo.querySelector('.player-video__overlay');\r\n  const playBtn = playerVideo.querySelector('.player-video__play');\r\n  const line = playerVideo.querySelector('.player-video__line');\r\n  const lineBuffer = line.querySelector('._buffer');\r\n  const lineProgress = line.querySelector('._progress');\r\n\r\n  let startTime = 0;\r\n  let isHideOverlay = false;\r\n\r\n  playBtn.addEventListener('click', ev => {\r\n    if (video.paused || video.ended) {\r\n      video.play();\r\n      playerVideo.classList.add('_played');\r\n    } else {\r\n      video.pause();\r\n      playerVideo.classList.remove('_played');\r\n    }\r\n  });\r\n\r\n  playerVideo.addEventListener('click', ev => {\r\n    const info = playerVideo.querySelector('.player-video__info');\r\n    const controlls = playerVideo.querySelector('.player-video__controlls');\r\n\r\n    if (\r\n      !ev.composedPath().includes(info) &&\r\n      !ev.composedPath().includes(controlls)\r\n    ) {\r\n      if (video.currentTime != 0 && video.currentTime != video.duration) {\r\n        playerVideo.classList.toggle('_hide-overlay');\r\n      }\r\n    }\r\n\r\n    startTime = video.currentTime;\r\n    isHideOverlay = true;\r\n  });\r\n\r\n  video.addEventListener('timeupdate', ev => {\r\n    const duration = video.duration;\r\n    if (duration > 0) {\r\n      for (let i = 0; video.buffered.length; i++) {\r\n        if (video.buffered.start(i) < video.currentTime) {\r\n          lineBuffer.style.width = video.buffered.end(i) * 100 / duration + \"%\";\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    lineProgress.style.width = video.currentTime / duration * 100 + \"%\";\r\n\r\n    if (video.currentTime - startTime > 2 && isHideOverlay) {\r\n      playerVideo.classList.add('_hide-overlay');\r\n      isHideOverlay = false;\r\n    }\r\n  });\r\n\r\n  video.addEventListener('play', ev => {\r\n    preview.classList.add('_hide');\r\n\r\n    startTime = video.currentTime;\r\n    isHideOverlay = true;\r\n  });\r\n\r\n  line.addEventListener('click', ev => {\r\n    let x = ev.clientX - line.getBoundingClientRect().left;\r\n    let width = line.getBoundingClientRect().width;\r\n    \r\n    lineProgress.style.width = x / width * 100 + \"%\";\r\n    video.currentTime = x / width * video.duration;\r\n  });\r\n\r\n  video.addEventListener('ended', function() {\r\n    preview.classList.remove('_hide');\r\n    playerVideo.classList.remove('_hide-overlay');\r\n    playerVideo.classList.remove('_played');\r\n  });\r\n\r\n});\r\n\r\nclientTestimonials.forEach(clientTestimonial => {\r\n  if (clientTestimonial) {\r\n    document.addEventListener('click', ev => {\r\n      if(ev.composedPath().includes(clientTestimonial)) {\r\n        clientTestimonial.classList.add('_active');\r\n      } else {\r\n        clientTestimonial.classList.remove('_active');\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nif (testimonial) {\r\n  const clientWrappers = document.querySelectorAll('.testimonial__client-wrapper');\r\n\r\n  clientWrappers.forEach(clientWrapper => {\r\n    const client = clientWrapper.querySelector('.testimonial__client');\r\n    const clientContent = client.querySelector('.client-testimonial__content');\r\n\r\n    document.addEventListener('click', ev => {\r\n      if(ev.composedPath().includes(client)) {\r\n        clientWrapper.classList.add('_active');\r\n      } else {\r\n        clientWrapper.classList.remove('_active');\r\n      }\r\n    })\r\n  });\r\n}\r\n\r\nif (popArticle) {\r\n  const slider = new Swiper('.pop-article__slider', {\r\n    slidesPerView: 1,\r\n    direction: 'horizontal',\r\n    loop: true,\r\n\r\n    pagination: {\r\n      el: '.pop-article__pagination',\r\n      clickable: true,\r\n    },\r\n\r\n    autoplay: {\r\n      delay: 2000\r\n    }\r\n  })\r\n}\r\n\r\nitemTeams.forEach(itemTeam => {\r\n  if (itemTeam) {\r\n    document.addEventListener('click', ev => {\r\n      if(ev.composedPath().includes(itemTeam)) {\r\n        itemTeam.classList.add('_active');\r\n      } else {\r\n        itemTeam.classList.remove('_active');\r\n      }\r\n    })\r\n  }\r\n});\r\n\r\nitemFaqs.forEach(itemFaq => {\r\n  const btn = itemFaq.querySelector('.item-faq__label');\r\n\r\n  btn.addEventListener('click', ev => {\r\n    itemFaq.classList.toggle('_opened');\r\n  })\r\n})"],"names":[],"sourceRoot":""}